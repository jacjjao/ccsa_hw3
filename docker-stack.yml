version: "3.9"

services:
  frontend:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - webnet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager   # ðŸ‘ˆ Run on manager

  backend:
    image: 127.0.0.1:5000/app:latest   # must be pre-built and pushed
    command: gunicorn -b 0.0.0.0:5000 app:app
    environment:
      - DATABASE_URL=postgresql://user:1234@db:5432/names_db
    networks:
      - webnet
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints:
          - node.role == manager   # ðŸ‘ˆ Run on manager

  db:
    image: postgres:17.6-bookworm
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=names_db
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - webnet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker    # ðŸ‘ˆ Run on worker

volumes:
  db_data:

networks:
  webnet:
